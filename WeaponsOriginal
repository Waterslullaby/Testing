using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.UI;

public class EnemyHealth : MonoBehaviour {

	public float HP;
	private CharacterController2D Cont;
	public Vector2 bounce; 
	private Vector2 currentPos;
	private CharacterController2D Enemy;
	float scaledHealth; //scaled health = current health / max health

	public GameObject enemyHealthBar; 
	public float maxHealth;

	private GameObject mpotPrefab;
	private Rigidbody2D mPot;


	public void Start() {
		bounce.x = 10;
		maxHealth = 10;
		HP = maxHealth;
		scaledHealth = HP / maxHealth;
		Cont = gameObject.GetComponent<CharacterController2D>();


	}
	
	void Update () {
		
		
	}

	public void OnTriggerEnter2D(Collider2D other)
	{
		if(other.CompareTag("Weapon") || other.CompareTag("PlayerProjectile"))
		{

			if((transform.position.x - other.transform.position.x) < 0)
			{
 				bounce.x = -3;
			}
			else
			{
				bounce.x = 3;
			}
			try
			{
				Cont.AddForce(bounce);
				Cont.SetHorizontalForce(0);
			} catch{}
			HP -= other.gameObject.GetComponent<Weapons>().GetWeaponDamage(); 



			setEnemyHealth ();
			Debug.Log ("OW");

			if(HP == 0)
			{
				if (Random.value >= .7) { //there's a 30% chance that it'll drop a health pot
					mpotPrefab = Resources.Load ("ManaPot") as GameObject;
					Rigidbody2D mPot = (Rigidbody2D)Instantiate (mpotPrefab.GetComponent<Rigidbody2D> (), new Vector2 (transform.position.x, transform.position.y), transform.rotation); // manapot spawns at dead monster's position
					mPot.GetComponent<Rigidbody2D> ().velocity = (new Vector2(Random.Range(-1, 1), Random.Range(-1, 1)) - (Vector2)transform.position) * 3; // mana pot now has a random velocity
				}

				gameObject.SetActive(false); // monster set as inactive. cannot be interacted with.

			}
		}
	}

	public void setEnemyHealth()
	{
		scaledHealth = HP / maxHealth;
		enemyHealthBar.transform.localScale = new Vector2 (scaledHealth, enemyHealthBar.transform.localScale.y);
	}


}


